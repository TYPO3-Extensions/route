
  ////////////////////////////////////////
  //
  // INDEX

  // temp.route
  //    navigation
  //    sql
  // config
  // plugin.tx_browser_pi1



  ////////////////////////////////////////
  //
  // temp.route.sql

temp.route {
  navigation {
    map < plugin.tx_browser_pi1.navigation.map
    map {
      marker {
        snippets {
          jss {
            dynamic {
              oxMapConfigModules {
                10 {
                  value = {$plugin.tx_browser_pi1.map.modules.routes.default}
                }
                20 {
                  value = {$plugin.tx_browser_pi1.map.modules.routes.debugging}
                }
              }
            }
          }
        }
      }
    }
  }
  sql {
    select (
      tx_route_path.title               AS 'tx_route_path.title',
      tx_route_path.short               AS 'tx_route_path.short',
      tx_route_path.bodytext            AS 'tx_route_path.bodytext',
      tx_route_path.geodata             AS 'tx_route_path.geodata',
      tx_route_path.icon_lat            AS 'tx_route_path.icon_lat',
      tx_route_path.icon_lon            AS 'tx_route_path.icon_lon',
      tx_route_path.color               AS 'tx_route_path.color',
      tx_route_path.line_width          AS 'tx_route_path.line_width',
      tx_route_path.list_title          AS 'tx_route_path.list_title',
      tx_route_path.list_short          AS 'tx_route_path.list_short',
      tx_route_path.map_title           AS 'tx_route_path.map_title',
      tx_route_path.map_short           AS 'tx_route_path.map_short',
      tx_route_path.image               AS 'tx_route_path.image',
      tx_route_path.imagecaption        AS 'tx_route_path.imagecaption',
      tx_route_path.imageseo            AS 'tx_route_path.imageseo',
      tx_route_path.imageheight         AS 'tx_route_path.imageheight',
      tx_route_path.imagewidth          AS 'tx_route_path.imagewidth',
      tx_route_path.imageorient         AS 'tx_route_path.imageorient',
      tx_route_path.imagecaption        AS 'tx_route_path.imagecaption',
      tx_route_path.imagecols           AS 'tx_route_path.imagecols',
      tx_route_path.imageborder         AS 'tx_route_path.imageborder',
      tx_route_path.imagecaption_position AS 'tx_route_path.imagecaption_position',
      tx_route_path.image_link          AS 'tx_route_path.image_link',
      tx_route_path.image_zoom          AS 'tx_route_path.image_zoom',
      tx_route_path.image_noRows        AS 'tx_route_path.image_noRows',
      tx_route_path.image_effects       AS 'tx_route_path.image_effects',
      tx_route_path.image_compression   AS 'tx_route_path.image_compression',
      tx_route_path.image_frames        AS 'tx_route_path.image_frames',
      tx_route_path.uid                 AS 'tx_route_path.uid',
      tx_route_path_cat.title           AS 'tx_route_path_cat.title',
      tx_route_path_cat.icons           AS 'tx_route_path_cat.icons',
      tx_route_path_cat.icon_offset_x   AS 'tx_route_path_cat.icon_offset_x',
      tx_route_path_cat.icon_offset_y   AS 'tx_route_path_cat.icon_offset_y',
      tx_route_path_cat.uid             AS 'tx_route_path_cat.uid',
      tx_route_marker.title             AS 'tx_route_marker.title',
      tx_route_marker.lat               AS 'tx_route_marker.lat',
      tx_route_marker.lon               AS 'tx_route_marker.lon',
      tx_route_marker.image             AS 'tx_route_marker.image',
      tx_route_marker.uid               AS 'tx_route_marker.uid',
      tx_route_marker_cat.title         AS 'tx_route_marker_cat.title',
      tx_route_marker_cat.icons         AS 'tx_route_marker_cat.icons',
      tx_route_marker_cat.icon_offset_x AS 'tx_route_marker_cat.icon_offset_x',
      tx_route_marker_cat.icon_offset_y AS 'tx_route_marker_cat.icon_offset_y',
      tx_route_marker_cat.uid           AS 'tx_route_marker_cat.uid',
      CONCAT( tx_route_path.uid, '.', tx_route_path_cat.uid ) AS 'PATH:tx_route_path->tx_route_path_cat->listOf.uid',
      CONCAT( tx_route_path.uid, '.', tx_route_marker.uid, '.', tx_route_marker_cat.uid ) AS 'MARKER:tx_route_path->tx_route_marker->tx_route_marker_cat->listOf.uid'
    )
    select {
      deal_as_table {
        0 {
          statement = CONCAT( tx_route_path.uid, '.', tx_route_path_cat.uid )
          alias     = PATH:tx_route_path->tx_route_path_cat->listOf.uid
        }
        1 {
          statement = CONCAT( tx_route_path.uid, '.', tx_route_marker.uid, '.', tx_route_marker_cat.uid )
          alias     = MARKER:tx_route_path->tx_route_marker->tx_route_marker_cat->listOf.uid
        }
      }
    }
    from {
      table = tx_route_path
      alias = tx_route_path
    }
    andWhere = COA
    andWhere {
      10 = TEXT
      10 {
        value = tx_route_path.pid IN (###PID_LIST###)
      }
      20 = TEXT
      20 {
        if {
          isTrue {
            data = GP:tx_browser_pi1|{$plugin.tx_browser_pi1.map.aliases.showUid.path}
          }
        }
        value       = AND tx_route_path.uid = {GP:tx_browser_pi1|{$plugin.tx_browser_pi1.map.aliases.showUid.path}}
        insertData  = 1
        noTrimWrap  = | | |
      }
    }
    joins {
      0 {
        type  = LEFT JOIN
        table = tx_route_path_mm_tx_route_category
        alias = tx_route_path_mm_cat
        on    = tx_route_path.uid = tx_route_path_mm_cat.uid_local
      }
      1 {
        type  = LEFT JOIN
        table = tx_route_category
        alias = tx_route_path_cat
        on    = tx_route_path_cat.uid = tx_route_path_mm_cat.uid_foreign
      }
      2 {
        type  = LEFT JOIN
        table = tx_route_path_mm_tx_route_marker
        alias = tx_route_path_mm_marker
        on    = tx_route_path.uid = tx_route_path_mm_marker.uid_local
      }
      3 {
        type  = LEFT JOIN
        table = tx_route_marker
        alias = tx_route_marker
        on    = tx_route_marker.uid = tx_route_path_mm_marker.uid_foreign
      }
      4 {
        type  = LEFT JOIN
        table = tx_route_marker_mm_tx_route_category
        alias = tx_route_marker_mm_cat
        on    = tx_route_marker.uid = tx_route_marker_mm_cat.uid_local
      }
      5 {
        type  = LEFT JOIN
        table = tx_route_category
        alias = tx_route_marker_cat
        on    = tx_route_marker_cat.uid = tx_route_marker_mm_cat.uid_foreign
      }
    }
    aliases {
      tables {
        tx_route_path           = tx_route_path
        tx_route_path_cat       = tx_route_path_cat
        tx_route_path_mm_cat    = tx_route_path_mm_tx_route_category
        tx_route_path_mm_marker = tx_route_path_mm_tx_route_marker
        tx_route_marker         = tx_route_marker
        tx_route_marker_cat     = tx_route_marker_cat
        tx_route_marker_mm_cat  = tx_route_marker_mm_tx_route_category
      }
      fields {
        uid = tx_route_path.uid
        pid = tx_route_path.pid
      }
    }
    orderBy = tx_route_path.title, tx_route_path_mm_marker.sorting, tx_route_marker_cat.title
  }
}
  // temp.route.sql



  ////////////////////////////////////////////////////////////////////////////////
  //
  // config

config {
  sys_language_uid      = 0
  sys_language_mode     = strict
  sys_language_overlay  = 0
}
  // config



  ////////////////////////////////////////////////////////////////////////////////
  //
  // plugin.tx_browser_pi1

plugin.tx_browser_pi1 {

  general_stdWrap >

  views {
    list {
      47676 = Route (map only)
      47676 {
        navigation {
          map < temp.route.navigation.map
          map {
            enabled = Map +Routes
          }
        }
        showUid   = {$plugin.tx_browser_pi1.map.aliases.showUid.path}
        name      = Route (map only)
        select    < temp.route.sql.select
        from      < temp.route.sql.from
        andWhere  < temp.route.sql.andWhere
        joins     < temp.route.sql.joins
        aliases   < temp.route.sql.aliases
        orderBy   < temp.route.sql.orderBy
        htmlSnippets =
        htmlSnippets {
          subparts {
            listview = TEXT
            listview {
              value (
                <div id="c###TT_CONTENT.UID###-listview-###MODE###" class="###VIEW###view ###VIEW###view-content ###VIEW###view-###MODE### ###VIEW###view-content-###MODE###">
                  <!-- ###LISTBODY### begin -->
                  ###MAP###
                    <!-- ###LISTBODYITEM### begin -->
                    <!-- ###LISTBODYITEM### end -->
                <!-- ###LISTBODY### end -->
                </div> <!-- /listview -->
)
            }
          }
        }
      }
      47677 = Route (text only)
      47677 {
        navigation {
          map < temp.route.navigation.map
          map {
            enabled = disabled
          }
        }
        showUid   = {$plugin.tx_browser_pi1.map.aliases.showUid.path}
        name      = Route (text only)
        select    < temp.route.sql.select
        from      < temp.route.sql.from
        andWhere  < temp.route.sql.andWhere
        joins     < temp.route.sql.joins
        aliases   < temp.route.sql.aliases
        orderBy   < temp.route.sql.orderBy
        tx_route_path =
        tx_route_path {
          image < tt_content.image.20
          image {
            imgList {
              field = tx_route_path.image
            }
            imgPath = {$plugin.tx_route.path.uploadfolder}
            1 {
              file {
                width.field = tx_route_path.imagewidth
                height.field = tx_route_path.imageheight
              }
              imageLinkWrap {
                ifEmpty {
                  typolink.parameter.field = tx_route_path.image_link
                }
                typolink {
                  parameter {
                    field = tx_route_path.image_link
                  }
                  additionalParams  = &tx_browser_pi1[{$plugin.tx_browser_pi1.map.aliases.showUid.path}]=###TX_ROUTE_PATH.UID###
                  useCacheHash      = 1
                  title             = TEXT
                  title {
                    field = tx_route_path.title
                  }
                }
                enable = 1
                enable {
                  field = tx_route_path.image_zoom
                  ifEmpty {
                    typolink {
                      parameter {
                        field = tx_route_path.image_link
                      }
                    }
                  }
                }
              }
            }
            textPos.field           >
              // 26: Left beside the text
            textPos                 = 26
            equalH.field            = tx_route_path.imageheight
            image_compression.field = tx_route_path.image_compression
            image_effects.field     = tx_route_path.image_effects
            noRows.field            = tx_route_path.image_norows
            cols.field              = tx_route_path.imagecols
            border.field            = tx_route_path.image_frames
            caption.1.1.field       = tx_route_path.imagecaption
            captionAlign.field      = tx_route_path.imagecaption_position
            layout {
              key.field        = tx_route_path.imageorient
              //key.field        >
              //key              = 26
              //default.value    = <div class="csc-textpic csc-textpic-center csc-textpic-above###CLASSES###">###IMAGES###</div><div class="csc-textpic-clear"><!-- --></div>###TEXT###
            }
            stdWrap {
              //prefixComment >
            }
              // #43936
            rendering {
              singleNoCaption {
                allStdWrap {
                  innerWrap {
                    cObject {
                      key.field = tx_route_path.imageorient
                    }
                  }
                }
                fallbackRendering {
                  10 {
                    if {
                      isTrue.field = tx_route_path.imagecaption
                    }
                  }
                  20 {
                    if {
                      isTrue.field = tx_route_path.imagecaption
                    }
                  }
                  30 {
                    if {
                      isTrue.field = tx_route_path.imagecaption
                    }
                  }
                  40 {
                    if {
                      isFalse.field = tx_route_path.imagecaption
                    }
                  }
                }
              }
              noCaption {
                fallbackRendering {
                  if {
                    isTrue.field = tx_route_path.imagecaption
                  }
                }
              }
              singleCaption {
                fallbackRendering {
                  if {
                    isTrue.field = tx_route_path.imagecaption
                  }
                }
              }
              splitCaption {
                fallbackRendering {
                  if {
                    isTrue.field = tx_route_path.imagecaption
                  }
                }
              }
              globalCaption {
                fallbackRendering {
                  if {
                    isTrue.field = tx_route_path.imagecaption
                  }
                }
              }
            }
          }
        }
        htmlSnippets =
        htmlSnippets {
          subparts {
            listview = TEXT
            listview {
              value (
                <div id="c###TT_CONTENT.UID###-listview-###MODE###" class="###VIEW###view ###VIEW###view-content ###VIEW###view-###MODE### ###VIEW###view-content-###MODE###">
                  <!-- ###LISTBODY### begin --><!-- ###LISTBODYITEM### begin -->
                  <div class="sbmFloatRight">
                    ###SOCIALMEDIA_BOOKMARKS###
                  </div>
                  ###TX_ROUTE_PATH.IMAGE###
                  <h2>
                    ###TX_ROUTE_PATH.TITLE###
                  </h2>
                  <p>
                    ###TX_ROUTE_MARKER.TITLE###
                  </p>
                  <div class="cleaner">&nbsp;</div><!-- ###LISTBODYITEM### end --><!-- ###LISTBODY### end -->
                </div> <!-- /listview -->
)
            }
          }
        }
      }
      47678 = Marker (single only)
      47678 {
        navigation {
          map < plugin.tx_browser_pi1.navigation.map
        }
        name    = Marker (single only)
        showUid = {$plugin.tx_browser_pi1.map.aliases.showUid.marker}
        select (
          tx_route_marker.title
        )
        htmlSnippets =
        htmlSnippets {
          subparts {
            listview = TEXT
            listview {
              value (
            <div id="c###TT_CONTENT.UID###-listview-###MODE###" class="###VIEW###view ###VIEW###view-content ###VIEW###view-###MODE### ###VIEW###view-content-###MODE###">
              <p>
                Marker don't have any list view.<br />
                Please use view.list.47676 for routes (map only).<br />
                Please use view.list.47677 for routes (text only).
              </p>
              <p>
                Markierungen haben keine Listen-Ansicht.<br />
                Bitte benutze view.list.47676 f&uuml;r Routen (nur Karte).<br />
                Bitte benutze view.list.47678 f&uuml;r Routen (nur Text).
              </p>
              <!-- ###LISTBODY### begin --><!-- ###LISTBODYITEM### begin -->
              <div class="cleaner">&nbsp;</div><!-- ###LISTBODYITEM### end --><!-- ###LISTBODY### end -->
            </div> <!-- /listview -->
)
            }
          }
        }
      }
    }
    single {
      47676 = Route (map only)
      47676 {
        navigation {
          map < temp.route.navigation.map
          map {
            enabled = disabled
          }
        }
        showUid   = {$plugin.tx_browser_pi1.map.aliases.showUid.path}
        name      = Route (map only)
        select    < temp.route.sql.select
        from      < temp.route.sql.from
        andWhere  < temp.route.sql.andWhere
        joins     < temp.route.sql.joins
        aliases   < temp.route.sql.aliases
        orderBy   < temp.route.sql.orderBy
          // table.field.uid: title
        tx_route_path =
        tx_route_path {
            // table.field.uid: title
          title = COA
          title {
              // table.field.
            10 = TEXT
            10 {
              value = tx_route_path.title.
            }
              // uid
            20 = TEXT
            20 {
              field = tx_route_path.uid
            }
            30 = TEXT
            30 {
              field = tx_route_path.title
              noTrimWrap = |: ||
            }
          }
        }
          // table.field.uid: title
        tx_route_path_cat =
        tx_route_path_cat {
            // table.field.uid: title
          title = COA
          title {
            10 = COA
            10 {
                // table.field.
              10 = TEXT
              10 {
                value = tx_route_path_cat.title.
              }
                // uid
              20 = TEXT
              20 {
                field = tx_route_path_cat.uid
              }
                // title
              30 = TEXT
              30 {
                field = tx_route_path_cat.title
                noTrimWrap = |: ||
              }
              wrap = <li>|</li>
            }
            20 = COA
            20 {
                // relation
              40 = TEXT
              40 {
                field = PATH:tx_route_path->tx_route_path_cat->listOf.uid
                noTrimWrap = |tx_route_path.tx_route_path_cat:  ||
              }
              wrap = <li>|</li>
            }
          }
        }
          // table.field.uid: title
        tx_route_marker =
        tx_route_marker {
            // table.field.uid: title
          title = COA
          title {
              // table.field.
            10 = TEXT
            10 {
              value = tx_route_marker.title.
            }
              // uid
            20 = TEXT
            20 {
              field = tx_route_marker.uid
            }
              // title
            30 = TEXT
            30 {
              field = tx_route_marker.title
              noTrimWrap = |: ||
            }
          }
        }
          // table.field.uid: title
        tx_route_marker_cat =
        tx_route_marker_cat {
            // table.field.uid: title
          title = COA
          title {
            10 = COA
            10 {
                // table.field.
              10 = TEXT
              10 {
                value = tx_route_marker.title.
              }
                // uid
              20 = TEXT
              20 {
                field = tx_route_marker.uid
              }
                // pipe
              30 = TEXT
              30 {
                value = |
              }
                // table.field.
              40 = TEXT
              40 {
                value = tx_route_marker_cat.title.
              }
                // uid
              50 = TEXT
              50 {
                field = tx_route_marker_cat.uid
              }
                // title
              60 = TEXT
              60 {
                field = tx_route_marker_cat.title
                noTrimWrap = |: ||
              }
              wrap = <li>|</li>
            }
            20 = COA
            20 {
                // relation
              70 = TEXT
              70 {
                field = MARKER:tx_route_path->tx_route_marker->tx_route_marker_cat->listOf.uid
                noTrimWrap = |tx_route_path.tx_route_marker.tx_route_marker_cat:  ||
              }
              wrap = <li>|</li>
            }
          }
        }
        htmlSnippets =
        htmlSnippets {
          subparts {
            singleview = TEXT
            singleview {
              value (
<!-- ###AREA_FOR_AJAX_LIST_01### begin -->
        <div id="c###TT_CONTENT.UID###-singleview-###MODE###" class="singleview singleview-###MODE###">
          <div class="ui-widget ui-corner-all">
            <!-- ###SINGLEBODY### begin -->
              ###MAP###
            <!-- ###SINGLEBODYROW### begin -->
            <!-- ###SINGLEBODYROW### end -->
  <!-- ###AREA_FOR_AJAX_LIST_01### end -->
            <!-- ###BACKBUTTON### begin -->
            <p class="backbutton">
              ###BUTTON###
            </p>
            <!-- ###BACKBUTTON### end -->
  <!-- ###AREA_FOR_AJAX_LIST_02### begin -->
            <!-- ###SINGLEBODY### end -->
          </div>
        </div>
<!-- ###AREA_FOR_AJAX_LIST_02### end -->
)
            }
          }
        }
      }
      47677 = Route (text only)
      47677 {
        showUid   = {$plugin.tx_browser_pi1.map.aliases.showUid.path}
        name      = Route (text only)
        select    = tx_route_path.title
        htmlSnippets =
        htmlSnippets {
          subparts {
            singleview = TEXT
            singleview {
              value (
        <div id="c###TT_CONTENT.UID###-singleview-###MODE###" class="singleview singleview-###MODE###">
          <!-- ###SINGLEBODY### begin -->
          <!-- ###SINGLEBODYROW### begin -->
            <p>
              Route (text only) doesn't have any single view.<br />
              Please use view.single.47676 for a route<br />
              Please use view.single.47678 for a marker.
            </p>
            <p>
              Route (text only) hat keine Detail-Ansicht.<br />
              Bitte benutze view.single.47676 f&uuml;r eine Route.<br />
              Bitte benutze view.single.47678 f&uuml;r eine Markierung.
            </p>
          <!-- ###SINGLEBODYROW### end -->
          <!-- ###SINGLEBODY### end -->
        </div>
)
            }
          }
        }
      }
      47678 = Marker (single only)
      47678 {
        showUid = {$plugin.tx_browser_pi1.map.aliases.showUid.marker}
        name    = Marker (single only)
        select (
          tx_route_marker.title,
          tx_route_marker.lat,
          tx_route_marker.lon,
          tx_route_marker.image,
          tx_route_marker.uid,
          tx_route_category.title,
          tx_route_category.icons,
          tx_route_category.icon_offset_x,
          tx_route_category.icon_offset_y,
          tx_route_category.uid,
          tx_route_path.title,
        )
        htmlSnippets =
        htmlSnippets {
          subparts {
            singleview = TEXT
            singleview {
              value (
<!-- ###AREA_FOR_AJAX_LIST_01### begin -->
        <div id="c###TT_CONTENT.UID###-singleview-###MODE###" class="singleview singleview-###MODE###">
          ###RECORD_BROWSER###
          <div class="ui-widget ui-corner-all">
            <!-- ###SINGLEBODY### begin -->
            <h1 class="ui-widget-header ui-corner-top">
              ###TX_ROUTE_MARKER.TITLE###
            </h1>
            <div class="ui-widget-content ui-corner-bottom">
              <dl style="font-size:.85em;">
                <!-- ###SINGLEBODYROW### begin -->
                <div class="sbmFloatRight">
                  ###SOCIALMEDIA_BOOKMARKS###
                </div>
                <ul>
                  ###TX_ROUTE_PATH.TITLE###
                </ul>
                <ul>
                  ###TX_ROUTE_CATEGORY.TITLE###
                </ul>
                <!-- ###SINGLEBODYROW### end -->
              </dl>
            </div>
            ###MAP###
  <!-- ###AREA_FOR_AJAX_LIST_01### end -->
            <!-- ###BACKBUTTON### begin -->
            <p class="backbutton">
              ###BUTTON###
            </p>
            <!-- ###BACKBUTTON### end -->
  <!-- ###AREA_FOR_AJAX_LIST_02### begin -->
            <!-- ###SINGLEBODY### end -->
          </div>
        </div>
<!-- ###AREA_FOR_AJAX_LIST_02### end -->
)
            }
          }
        }
      }
    }
  }
  _CSS_DEFAULT_STYLE (
    .tx-browser-pi1 div.azSelector,
    .tx-browser-pi1 div.indexBrowser,
    .tx-browser-pi1 div.modeSelector {
      padding:.4em 0;
      /* 111218, 3.9.6, dwildt-*/
      /*height:1.4em;*/
    }
)
}
  // plugin.tx_browser_pi1